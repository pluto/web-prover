[package]
name = "tls-client"
authors = ["TLSNotary Team"]
description = "A TLS client for TLSNotary"
keywords = ["tls", "mpc", "2pc", "client", "sync"]
categories = ["cryptography"]
license = "MIT OR Apache-2.0"
version = "0.1.0-alpha.5"
edition = "2021"
autobenches = false
build = "build.rs"

[lib]
name = "tls_client"

[build-dependencies]
rustversion = { version = "1", optional = true }

[dependencies]
hex = "0.4"
tls-core = { path = "../tls-core" }
zeroize = "1.7"
sha2 = { version = "0.10", default-features = false }

thiserror = "2.0.4"

# async-trait.workspace = true
async-trait = "0.1"
# log = { workspace = true, optional = true }
log = {version = "0.4", optional = true }
# ring.workspace = true
ring = { version = "0.17", features = ["wasm32_unknown_unknown_js"] }
# sct.workspace = true
sct = "0.7"
# webpki = { workspace = true, features = ["alloc", "std"] }
webpki = {version = "0.22", features = ["alloc", "std"]}
# aes-gcm.workspace = true
aes-gcm = "0.9"
chacha20poly1305 = "0.10"
# p256 = { workspace = true, features = ["ecdh"] }
p256 = {version = "0.13", features = ["ecdh"]}
# rand.workspace = true
rand = "0.8"
# hmac.workspace = true
hmac = "0.12"
# digest.workspace = true
digest = "0.10"
# futures.workspace = true
futures = "0.3"
# web-time.workspace = true
web-time = "0.2"
base64 = "0.22.1"

tls-parser = "0.12.0"
strum_macros="0.26.1"
serde     ={ version="1.0.204", features=["derive"] }
serde_json="1.0.120"
indexmap = {version="1.9.3", features=["serde"]}

[features]
default = ["logging", "tls12"]
logging = ["log"]
dangerous_configuration = []
tls12 = []
read_buf = ["rustversion"]
ring = []

[dev-dependencies]
# env_logger.workspace = true
env_logger = "0.10"
# webpki-roots.workspace = true
webpki-roots = "0.26"
# rustls-pemfile.workspace = true
rustls-pemfile = "1"
# rustls = { workspace = true, features = ["tls12"] }
rustls = {version = "0.20", features = ["tls12"]}
# tokio = { workspace = true, features = ["rt", "macros"] }
tokio = {version = "1", features = ["rt", "macros"]}

[[example]]
name = "bench"
path = "examples/internal/bench.rs"

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]
