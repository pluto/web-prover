name: client_wasm

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]

    name: client_wasm on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    env:
      CARGO_TERM_COLOR: always

    steps:
      - uses: actions/checkout@v4

      # Install the generic nightly toolchain
      - run: rustup toolchain install nightly-2024-10-28 --profile minimal --no-self-update

      # Add the `rust-src` component and wasm target for WebAssembly builds
      - run: |
          rustup component add rust-src --toolchain nightly-2024-10-28
          rustup target add wasm32-unknown-unknown --toolchain nightly-2024-10-28

      # Add platform-specific targets
      - run: rustup target add x86_64-unknown-linux-gnu --toolchain nightly-2024-10-28
        if: matrix.os == 'ubuntu-latest'

      - run: rustup target add aarch64-apple-darwin --toolchain nightly-2024-10-28
        if: matrix.os == 'macos-latest'

      - run: sudo apt install -y protobuf-compiler
        if: matrix.os == 'ubuntu-latest'

      - name: Install LLVM and Clang to support 'ring' crate and protobuf
        if: matrix.os == 'macos-latest'
        run: |
          brew install llvm@18 # https://formulae.brew.sh/formula/llvm#default
          echo /opt/homebrew/opt/llvm@18/bin >> $GITHUB_PATH
          brew install protobuf

      - name: Install unzip (linux)
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt install unzip -y

      - name: Download prebuilt web-prover-circuits artifact
        run: |
          cd proofs && make web-prover-circuits-512

      # TODO run automated tests?
      #      wasm-pack test --firefox
      #      docs: https://rustwasm.github.io/docs/wasm-pack/tutorials/npm-browser-packages/testing-your-project.html

      - name: compile wasm
        run: |
          # TODO (sambhav): move this to wasm
          make wasm-debug

      - run: "tar czf pkg.tar.gz ./pkg/*"
        if: matrix.os == 'ubuntu-latest'
        working-directory: "client_wasm"

      - uses: actions/upload-artifact@v4
        if: matrix.os == 'ubuntu-latest'
        with:
          name: "wasm.tar.gz"
          path: "client_wasm/pkg.tar.gz"
