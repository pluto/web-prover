name: client

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]

    name: client on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - run: rustup toolchain install nightly --profile minimal --no-self-update

      - run: rustup component add rust-src --toolchain nightly-x86_64-unknown-linux-gnu
        if: matrix.os == 'ubuntu-latest'

      - run: rustup component add rust-src --toolchain nightly-aarch64-apple-darwin
        if: matrix.os == 'macos-latest'

      - run: sudo apt install -y protobuf-compiler
        if: matrix.os == 'ubuntu-latest'

      - name: Install LLVM and Clang to support 'ring' crate and protobuf
        if: matrix.os == 'macos-latest'
        run: |
          brew install llvm@18 # https://formulae.brew.sh/formula/llvm#default
          echo /opt/homebrew/opt/llvm@18/bin >> $GITHUB_PATH
          brew install protobuf

      - name: Download Circom (linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          CIRCOM_VERSION=2.1.9
          curl -L https://github.com/iden3/circom/releases/download/v$CIRCOM_VERSION/circom-linux-amd64 -o circom
          chmod +x circom
          sudo mv circom /usr/local/bin/
          circom --version

      - name: Download Circom (macos)
        if: matrix.os == 'macos-latest'
        run: |
          CIRCOM_VERSION=2.1.9
          curl -L https://github.com/iden3/circom/releases/download/v$CIRCOM_VERSION/circom-macos-amd64 -o circom
          chmod +x circom
          sudo mv circom /usr/local/bin/
          circom --version

      - name: Setup circom-witnesscalc
        run: |
          cd .. && git clone https://github.com/iden3/circom-witnesscalc.git
          cd circom-witnesscalc
          cargo install --path .
          echo $(which build-circuit)

      - run: |
          cd proofs
          npm install
          make aes
          cd ..
          RUST_LOG=DEBUG cargo run --release -p notary -- --config ./fixture/notary-config.toml &
          sleep 30
          NOTARY_CA_CERT_PATH=../../fixture/certs/ca-cert.cer cargo run --release -p client -- --config ./fixture/client.tlsn_tcp_local.json
          NOTARY_CA_CERT_PATH=../../fixture/certs/ca-cert.cer cargo run --release -p client -- --config ./fixture/client.origo_tcp_local.json
