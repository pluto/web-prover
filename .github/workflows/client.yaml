name: client

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [self-hosted, macos-latest]

    name: client on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - run: | 
        rustup toolchain install nightly-2024-10-28 --profile minimal --no-self-update
        rustup component add rust-src --toolchain nightly-2024-10-28
        rustup target add aarch64-apple-darwin --toolchain nightly-2024-10-28
        rustup target add x86_64-unknown-linux-gnu

      - run: rustup component add rust-src --toolchain nightly-2024-09-25-aarch64-apple-darwin
        if: matrix.os == 'macos-latest'

      - run: sudo apt install -y protobuf-compiler
        if: matrix.os == 'self-hosted'

      - name: Install LLVM and Clang to support 'ring' crate and protobuf
        if: matrix.os == 'macos-latest'
        run: |
          brew install llvm@18 # https://formulae.brew.sh/formula/llvm#default
          echo /opt/homebrew/opt/llvm@18/bin >> $GITHUB_PATH
          brew install protobuf

      - name: Install unzip (linux)
        if: matrix.os == 'self-hosted'
        run: sudo apt install unzip -y

      - name: Download prebuilt web-prover-circuits artifact
        run: |
          curl -L -o circuits.zip https://github.com/pluto/web-prover-circuits/releases/latest/download/circom-artifacts-v0.2.3.zip
          unzip -o circuits.zip -d proofs/web_proof_circuits

      - run: |
          RUST_LOG=DEBUG cargo +nightly-2024-10-28 run --release -p notary -- --config ./fixture/notary-config.toml &
          sleep 30
          NOTARY_CA_CERT_PATH=../../fixture/certs/ca-cert.cer cargo run --release -p client -- --config ./fixture/client.tlsn_tcp_local.json
          NOTARY_CA_CERT_PATH=../../fixture/certs/ca-cert.cer cargo run --release -p client -- --config ./fixture/client.origo_tcp_local.json
